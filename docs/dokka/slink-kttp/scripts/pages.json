[{"name":"class KttpException(val url: String, val code: Int, val responseBody: String) : RuntimeException","description":"io.slink.kttp.KttpException","location":"slink-kttp/io.slink.kttp/-kttp-exception/index.html","searchKeys":["KttpException","class KttpException(val url: String, val code: Int, val responseBody: String) : RuntimeException","io.slink.kttp.KttpException"]},{"name":"const val HTTP_CREATED: Int = 201","description":"io.slink.kttp.HTTP_CREATED","location":"slink-kttp/io.slink.kttp/-h-t-t-p_-c-r-e-a-t-e-d.html","searchKeys":["HTTP_CREATED","const val HTTP_CREATED: Int = 201","io.slink.kttp.HTTP_CREATED"]},{"name":"const val HTTP_OK: Int = 200","description":"io.slink.kttp.HTTP_OK","location":"slink-kttp/io.slink.kttp/-h-t-t-p_-o-k.html","searchKeys":["HTTP_OK","const val HTTP_OK: Int = 200","io.slink.kttp.HTTP_OK"]},{"name":"fun <T> Response.withBody(handler: (Long, InputStream) -> T): T","description":"io.slink.kttp.withBody","location":"slink-kttp/io.slink.kttp/with-body.html","searchKeys":["withBody","fun <T> Response.withBody(handler: (Long, InputStream) -> T): T","io.slink.kttp.withBody"]},{"name":"fun KttpException(response: Response)","description":"io.slink.kttp.KttpException.KttpException","location":"slink-kttp/io.slink.kttp/-kttp-exception/-kttp-exception.html","searchKeys":["KttpException","fun KttpException(response: Response)","io.slink.kttp.KttpException.KttpException"]},{"name":"fun KttpException(url: String, code: Int, responseBody: String)","description":"io.slink.kttp.KttpException.KttpException","location":"slink-kttp/io.slink.kttp/-kttp-exception/-kttp-exception.html","searchKeys":["KttpException","fun KttpException(url: String, code: Int, responseBody: String)","io.slink.kttp.KttpException.KttpException"]},{"name":"fun OkHttpClient.Builder.baseUrl(baseUrl: String): OkHttpClient.Builder","description":"io.slink.kttp.baseUrl","location":"slink-kttp/io.slink.kttp/base-url.html","searchKeys":["baseUrl","fun OkHttpClient.Builder.baseUrl(baseUrl: String): OkHttpClient.Builder","io.slink.kttp.baseUrl"]},{"name":"fun OkHttpClient.Builder.ignoreSslErrors(): OkHttpClient.Builder","description":"io.slink.kttp.ignoreSslErrors","location":"slink-kttp/io.slink.kttp/ignore-ssl-errors.html","searchKeys":["ignoreSslErrors","fun OkHttpClient.Builder.ignoreSslErrors(): OkHttpClient.Builder","io.slink.kttp.ignoreSslErrors"]},{"name":"fun OkHttpClient.Builder.noRedirects(): OkHttpClient.Builder","description":"io.slink.kttp.noRedirects","location":"slink-kttp/io.slink.kttp/no-redirects.html","searchKeys":["noRedirects","fun OkHttpClient.Builder.noRedirects(): OkHttpClient.Builder","io.slink.kttp.noRedirects"]},{"name":"fun OkHttpClient.get(url: String, headers: Map<String, String> = emptyMap()): Response","description":"io.slink.kttp.get","location":"slink-kttp/io.slink.kttp/get.html","searchKeys":["get","fun OkHttpClient.get(url: String, headers: Map<String, String> = emptyMap()): Response","io.slink.kttp.get"]},{"name":"fun OkHttpClient.head(url: String, headers: Map<String, String> = emptyMap()): Response","description":"io.slink.kttp.head","location":"slink-kttp/io.slink.kttp/head.html","searchKeys":["head","fun OkHttpClient.head(url: String, headers: Map<String, String> = emptyMap()): Response","io.slink.kttp.head"]},{"name":"fun OkHttpClient.post(url: String, data: String, mediaType: String, headers: Map<String, String> = emptyMap()): Response","description":"io.slink.kttp.post","location":"slink-kttp/io.slink.kttp/post.html","searchKeys":["post","fun OkHttpClient.post(url: String, data: String, mediaType: String, headers: Map<String, String> = emptyMap()): Response","io.slink.kttp.post"]},{"name":"fun OkHttpClient.postForm(url: String, data: Map<String, Any>, headers: Map<String, String> = emptyMap()): Response","description":"io.slink.kttp.postForm","location":"slink-kttp/io.slink.kttp/post-form.html","searchKeys":["postForm","fun OkHttpClient.postForm(url: String, data: Map<String, Any>, headers: Map<String, String> = emptyMap()): Response","io.slink.kttp.postForm"]},{"name":"fun Response.checkOk(): Response","description":"io.slink.kttp.checkOk","location":"slink-kttp/io.slink.kttp/check-ok.html","searchKeys":["checkOk","fun Response.checkOk(): Response","io.slink.kttp.checkOk"]},{"name":"fun Response.checkStatus(vararg successCodes: Int): Response","description":"io.slink.kttp.checkStatus","location":"slink-kttp/io.slink.kttp/check-status.html","searchKeys":["checkStatus","fun Response.checkStatus(vararg successCodes: Int): Response","io.slink.kttp.checkStatus"]},{"name":"fun Response.isOk(): Boolean","description":"io.slink.kttp.isOk","location":"slink-kttp/io.slink.kttp/is-ok.html","searchKeys":["isOk","fun Response.isOk(): Boolean","io.slink.kttp.isOk"]},{"name":"fun Response.text(): String","description":"io.slink.kttp.text","location":"slink-kttp/io.slink.kttp/text.html","searchKeys":["text","fun Response.text(): String","io.slink.kttp.text"]},{"name":"fun Response.writeTo(file: File): File","description":"io.slink.kttp.writeTo","location":"slink-kttp/io.slink.kttp/write-to.html","searchKeys":["writeTo","fun Response.writeTo(file: File): File","io.slink.kttp.writeTo"]},{"name":"fun Response.writeTo(outputStream: OutputStream)","description":"io.slink.kttp.writeTo","location":"slink-kttp/io.slink.kttp/write-to.html","searchKeys":["writeTo","fun Response.writeTo(outputStream: OutputStream)","io.slink.kttp.writeTo"]},{"name":"fun newHttpClient(init: OkHttpClient.Builder.() -> Unit = { }): OkHttpClient","description":"io.slink.kttp.newHttpClient","location":"slink-kttp/io.slink.kttp/new-http-client.html","searchKeys":["newHttpClient","fun newHttpClient(init: OkHttpClient.Builder.() -> Unit = { }): OkHttpClient","io.slink.kttp.newHttpClient"]},{"name":"val code: Int","description":"io.slink.kttp.KttpException.code","location":"slink-kttp/io.slink.kttp/-kttp-exception/code.html","searchKeys":["code","val code: Int","io.slink.kttp.KttpException.code"]},{"name":"val responseBody: String","description":"io.slink.kttp.KttpException.responseBody","location":"slink-kttp/io.slink.kttp/-kttp-exception/response-body.html","searchKeys":["responseBody","val responseBody: String","io.slink.kttp.KttpException.responseBody"]},{"name":"val url: String","description":"io.slink.kttp.KttpException.url","location":"slink-kttp/io.slink.kttp/-kttp-exception/url.html","searchKeys":["url","val url: String","io.slink.kttp.KttpException.url"]}]
